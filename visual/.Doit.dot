digraph "CFG for 'Doit' function" {
	label="CFG for 'Doit' function";

	Node0x55c92b7ec7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{entry:\l  %q = alloca i32, align 4\l  %a = alloca [9 x i32], align 16\l  %b = alloca [17 x i32], align 16\l  %c = alloca [15 x i32], align 16\l  %x = alloca [9 x i32], align 16\l  %nullalloc12 = alloca i1, align 1\l  %nullLoad12 = load i1, i1* %nullalloc12, align 1\l  %nullalloc13 = alloca i64, align 8\l  %nullLoad13 = load i64, i64* %nullalloc13, align 8\l  %nullalloc23 = alloca i32, align 4\l  %nullLoad23 = load i32, i32* %nullalloc23, align 4\l  br label %entry.split\l}"];
	Node0x55c92b7ec7b0 -> Node0x55c92b7ee9b0;
	Node0x55c92b7ee9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{entry.split:                                      \l  %OptInsert_arraydecay = getelementptr inbounds [17 x i32], [17 x i32]* %b,\l... i64 0, i64 0\l  %OptInsert_arraydecay14 = getelementptr inbounds [9 x i32], [9 x i32]* %a,\l... i64 0, i64 0\l  %OptInsert_arraydecay15 = getelementptr inbounds [15 x i32], [15 x i32]* %c,\l... i64 0, i64 0\l  %OptInsert_arraydecay16 = getelementptr inbounds [9 x i32], [9 x i32]* %x,\l... i64 0, i64 0\l  %OptInsert_ = load i32, i32* %q, align 4\l  br label %while.cond\l}"];
	Node0x55c92b7ee9b0 -> Node0x55c92b7eea00;
	Node0x55c92b7eea00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond:                                       \l  %i.0 = phi i32 [ -7, %entry.split ], [ %add13, %if.end12 ]\l  %NewPhi_NewPhi_OptInsert_cmp2 = phi i1 [ %nullLoad12, %entry.split ], [\l... %NewPhi_OptInsert_cmp2, %if.end12 ]\l  %NewPhi_NewPhi_OptInsert_idxprom = phi i64 [ %nullLoad13, %entry.split ], [\l... %NewPhi_OptInsert_idxprom, %if.end12 ]\l  %NewPhi_NewPhi_OptInsert_add = phi i32 [ %nullLoad23, %entry.split ], [\l... %NewPhi_OptInsert_add, %if.end12 ]\l  %cmp = icmp sle i32 %i.0, 16\l  br i1 %cmp, label %while.body.split, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7eea00:s0 -> Node0x55c92b7eea50;
	Node0x55c92b7eea00:s1 -> Node0x55c92b7eefa0;
	Node0x55c92b7eea50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.body.split:                                 \l  %OptInsert_cmp1 = icmp sge i32 %i.0, 1\l  %OptInsert_cmp3 = icmp sge i32 %i.0, 2\l  %OptInsert_cmp8 = icmp sle i32 %i.0, 7\l  br label %while.body\l}"];
	Node0x55c92b7eea50 -> Node0x55c92b7eeaa0;
	Node0x55c92b7eeaa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.body:                                       \l  br i1 %OptInsert_cmp1, label %land.lhs.true.split, label\l... %while.body.if.end_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7eeaa0:s0 -> Node0x55c92b7eeb40;
	Node0x55c92b7eeaa0:s1 -> Node0x55c92b7eeaf0;
	Node0x55c92b7eeaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{while.body.if.end_crit_edge:                      \l  br label %if.end\l}"];
	Node0x55c92b7eeaf0 -> Node0x55c92b7eecd0;
	Node0x55c92b7eeb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{land.lhs.true.split:                              \l  %OptInsert_cmp2 = icmp sle i32 %i.0, 8\l  br label %land.lhs.true\l}"];
	Node0x55c92b7eeb40 -> Node0x55c92b7eeb90;
	Node0x55c92b7eeb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{land.lhs.true:                                    \l  br i1 %OptInsert_cmp2, label %if.then.split, label\l... %land.lhs.true.if.end_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7eeb90:s0 -> Node0x55c92b7eec30;
	Node0x55c92b7eeb90:s1 -> Node0x55c92b7eebe0;
	Node0x55c92b7eebe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{land.lhs.true.if.end_crit_edge:                   \l  br label %if.end\l}"];
	Node0x55c92b7eebe0 -> Node0x55c92b7eecd0;
	Node0x55c92b7eec30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{if.then.split:                                    \l  %OptInsert_idxprom1 = sext i32 %i.0 to i64\l  br label %if.then\l}"];
	Node0x55c92b7eec30 -> Node0x55c92b7eec80;
	Node0x55c92b7eec80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{if.then:                                          \l  %arrayidx = getelementptr inbounds [9 x i32], [9 x i32]* %a, i64 0, i64\l... %OptInsert_idxprom1\l  store i32 1, i32* %arrayidx, align 4\l  br label %if.end\l}"];
	Node0x55c92b7eec80 -> Node0x55c92b7eecd0;
	Node0x55c92b7eecd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  %NewPhi_OptInsert_cmp2 = phi i1 [ %OptInsert_cmp2, %if.then ], [\l... %OptInsert_cmp2, %land.lhs.true.if.end_crit_edge ], [\l... %NewPhi_NewPhi_OptInsert_cmp2, %while.body.if.end_crit_edge ]\l  %NewPhi_OptInsert_idxprom1 = phi i64 [ %OptInsert_idxprom1, %if.then ], [\l... %NewPhi_NewPhi_OptInsert_idxprom, %land.lhs.true.if.end_crit_edge ], [\l... %NewPhi_NewPhi_OptInsert_idxprom, %while.body.if.end_crit_edge ]\l  br i1 %OptInsert_cmp3, label %if.then4.split, label %if.end.if.end7_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7eecd0:s0 -> Node0x55c92b7eed70;
	Node0x55c92b7eecd0:s1 -> Node0x55c92b7eed20;
	Node0x55c92b7eed20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{if.end.if.end7_crit_edge:                         \l  br label %if.end7\l}"];
	Node0x55c92b7eed20 -> Node0x55c92b7eee10;
	Node0x55c92b7eed70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{if.then4.split:                                   \l  %OptInsert_idxprom = sext i32 %i.0 to i64\l  br label %if.then4\l}"];
	Node0x55c92b7eed70 -> Node0x55c92b7eedc0;
	Node0x55c92b7eedc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{if.then4:                                         \l  %arrayidx6 = getelementptr inbounds [17 x i32], [17 x i32]* %b, i64 0, i64\l... %OptInsert_idxprom\l  store i32 1, i32* %arrayidx6, align 4\l  br label %if.end7\l}"];
	Node0x55c92b7eedc0 -> Node0x55c92b7eee10;
	Node0x55c92b7eee10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end7:                                          \l  %NewPhi_OptInsert_idxprom = phi i64 [ %OptInsert_idxprom, %if.then4 ], [\l... %NewPhi_OptInsert_idxprom1, %if.end.if.end7_crit_edge ]\l  br i1 %OptInsert_cmp8, label %if.then9.split, label\l... %if.end7.if.end12_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7eee10:s0 -> Node0x55c92b7eeeb0;
	Node0x55c92b7eee10:s1 -> Node0x55c92b7eee60;
	Node0x55c92b7eee60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{if.end7.if.end12_crit_edge:                       \l  br label %if.end12\l}"];
	Node0x55c92b7eee60 -> Node0x55c92b7eef50;
	Node0x55c92b7eeeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{if.then9.split:                                   \l  %OptInsert_add = add nsw i32 %i.0, 7\l  br label %if.then9\l}"];
	Node0x55c92b7eeeb0 -> Node0x55c92b7eef00;
	Node0x55c92b7eef00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{if.then9:                                         \l  %idxprom10 = sext i32 %OptInsert_add to i64\l  %arrayidx11 = getelementptr inbounds [15 x i32], [15 x i32]* %c, i64 0, i64\l... %idxprom10\l  store i32 1, i32* %arrayidx11, align 4\l  br label %if.end12\l}"];
	Node0x55c92b7eef00 -> Node0x55c92b7eef50;
	Node0x55c92b7eef50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end12:                                         \l  %NewPhi_OptInsert_add = phi i32 [ %OptInsert_add, %if.then9 ], [\l... %NewPhi_NewPhi_OptInsert_add, %if.end7.if.end12_crit_edge ]\l  %add13 = add nsw i32 %i.0, 1\l  br label %while.cond, !llvm.loop !31\l}"];
	Node0x55c92b7eef50 -> Node0x55c92b7eea00;
	Node0x55c92b7eefa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{while.end:                                        \l  call void @Try(i32 1, i32* %q, i32* %OptInsert_arraydecay, i32*\l... %OptInsert_arraydecay14, i32* %OptInsert_arraydecay15, i32*\l... %OptInsert_arraydecay16)\l  %tobool = icmp ne i32 %OptInsert_, 0\l  br i1 %tobool, label %while.end.if.end18_crit_edge, label %if.then17\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7eefa0:s0 -> Node0x55c92b7eeff0;
	Node0x55c92b7eefa0:s1 -> Node0x55c92b7ef040;
	Node0x55c92b7eeff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{while.end.if.end18_crit_edge:                     \l  br label %if.end18\l}"];
	Node0x55c92b7eeff0 -> Node0x55c92b7ef090;
	Node0x55c92b7ef040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{if.then17:                                        \l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8],\l... [19 x i8]* @.str, i64 0, i64 0))\l  br label %if.end18\l}"];
	Node0x55c92b7ef040 -> Node0x55c92b7ef090;
	Node0x55c92b7ef090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{if.end18:                                         \l  ret void\l}"];
}
