digraph "CFG for 'Try' function" {
	label="CFG for 'Try' function";

	Node0x55c92b7e6670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{entry:\l  store i32 0, i32* %q, align 4\l  %nullalloc16 = alloca i32, align 4\l  %nullLoad16 = load i32, i32* %nullalloc16, align 4\l  %nullalloc22 = alloca i32, align 4\l  %nullLoad22 = load i32, i32* %nullalloc22, align 4\l  %nullalloc47 = alloca i1, align 1\l  %nullLoad47 = load i1, i1* %nullalloc47, align 1\l  br label %entry.split\l}"];
	Node0x55c92b7e6670 -> Node0x55c92b7dd460;
	Node0x55c92b7dd460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{entry.split:                                      \l  %OptInsert_ = load i32, i32* %q, align 4\l  %OptInsert_idxprom11 = sext i32 %i to i64\l  %OptInsert_cmp22 = icmp slt i32 %i, 8\l  %OptInsert_add24 = add nsw i32 %i, 1\l  %OptInsert_1 = load i32, i32* %q, align 4\l  br label %while.cond\l}"];
	Node0x55c92b7dd460 -> Node0x55c92b7dd4b0;
	Node0x55c92b7dd4b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond:                                       \l  %j.0 = phi i32 [ 0, %entry.split ], [ %add, %if.end37 ]\l  %NewPhi_NewPhi_OptInsert_add2 = phi i32 [ %nullLoad16, %entry.split ], [\l... %NewPhi_OptInsert_add2, %if.end37 ]\l  %NewPhi_NewPhi_OptInsert_sub32 = phi i32 [ %nullLoad22, %entry.split ], [\l... %NewPhi_OptInsert_sub32, %if.end37 ]\l  %NewPhi_NewPhi_OptInsert_cmp = phi i1 [ %nullLoad47, %entry.split ], [\l... %NewPhi_OptInsert_cmp, %if.end37 ]\l  %tobool = icmp ne i32 %OptInsert_, 0\l  br i1 %tobool, label %while.cond.land.end_crit_edge, label %land.rhs.split\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7dd4b0:s0 -> Node0x55c92b7dd500;
	Node0x55c92b7dd4b0:s1 -> Node0x55c92b7dd550;
	Node0x55c92b7dd500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{while.cond.land.end_crit_edge:                    \l  br label %land.end\l}"];
	Node0x55c92b7dd500 -> Node0x55c92b7dd5f0;
	Node0x55c92b7dd550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{land.rhs.split:                                   \l  %OptInsert_cmp = icmp ne i32 %j.0, 8\l  br label %land.rhs\l}"];
	Node0x55c92b7dd550 -> Node0x55c92b7dd5a0;
	Node0x55c92b7dd5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{land.rhs:                                         \l  %cmp = icmp ne i32 %j.0, 8\l  br label %land.end\l}"];
	Node0x55c92b7dd5a0 -> Node0x55c92b7dd5f0;
	Node0x55c92b7dd5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{land.end:                                         \l  %0 = phi i1 [ false, %while.cond.land.end_crit_edge ], [ %cmp, %land.rhs ]\l  %NewPhi_OptInsert_cmp = phi i1 [ %NewPhi_NewPhi_OptInsert_cmp,\l... %while.cond.land.end_crit_edge ], [ %OptInsert_cmp, %land.rhs ]\l  br i1 %0, label %while.body.split, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7dd5f0:s0 -> Node0x55c92b7dd640;
	Node0x55c92b7dd5f0:s1 -> Node0x55c92b7e8290;
	Node0x55c92b7dd640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{while.body.split:                                 \l  %OptInsert_add = add nsw i32 %j.0, 1\l  br label %while.body\l}"];
	Node0x55c92b7dd640 -> Node0x55c92b7dd690;
	Node0x55c92b7dd690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{while.body:                                       \l  %add = add nsw i32 %j.0, 1\l  store i32 0, i32* %q, align 4\l  %idxprom = sext i32 %OptInsert_add to i64\l  %arrayidx = getelementptr inbounds i32, i32* %b, i64 %idxprom\l  %1 = load i32, i32* %arrayidx, align 4\l  %tobool1 = icmp ne i32 %1, 0\l  br i1 %tobool1, label %land.lhs.true.split, label\l... %while.body.if.end37_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7dd690:s0 -> Node0x55c92b7dd730;
	Node0x55c92b7dd690:s1 -> Node0x55c92b7dd6e0;
	Node0x55c92b7dd6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{while.body.if.end37_crit_edge:                    \l  br label %if.end37\l}"];
	Node0x55c92b7dd6e0 -> Node0x55c92b7e8240;
	Node0x55c92b7dd730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{land.lhs.true.split:                              \l  %OptInsert_add2 = add nsw i32 %i, %OptInsert_add\l  br label %land.lhs.true\l}"];
	Node0x55c92b7dd730 -> Node0x55c92b7dd780;
	Node0x55c92b7dd780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{land.lhs.true:                                    \l  %idxprom3 = sext i32 %OptInsert_add2 to i64\l  %arrayidx4 = getelementptr inbounds i32, i32* %a, i64 %idxprom3\l  %2 = load i32, i32* %arrayidx4, align 4\l  %tobool5 = icmp ne i32 %2, 0\l  br i1 %tobool5, label %land.lhs.true6.split, label\l... %land.lhs.true.if.end37_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7dd780:s0 -> Node0x55c92b7dd820;
	Node0x55c92b7dd780:s1 -> Node0x55c92b7dd7d0;
	Node0x55c92b7dd7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{land.lhs.true.if.end37_crit_edge:                 \l  br label %if.end37\l}"];
	Node0x55c92b7dd7d0 -> Node0x55c92b7e8240;
	Node0x55c92b7dd820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{land.lhs.true6.split:                             \l  %OptInsert_sub32 = sub nsw i32 %i, %OptInsert_add\l  br label %land.lhs.true6\l}"];
	Node0x55c92b7dd820 -> Node0x55c92b7dd870;
	Node0x55c92b7dd870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{land.lhs.true6:                                   \l  %add7 = add nsw i32 %OptInsert_sub32, 7\l  %idxprom8 = sext i32 %add7 to i64\l  %arrayidx9 = getelementptr inbounds i32, i32* %c, i64 %idxprom8\l  %3 = load i32, i32* %arrayidx9, align 4\l  %tobool10 = icmp ne i32 %3, 0\l  br i1 %tobool10, label %if.then, label %land.lhs.true6.if.end37_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7dd870:s0 -> Node0x55c92b7e8010;
	Node0x55c92b7dd870:s1 -> Node0x55c92b7dd8c0;
	Node0x55c92b7dd8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{land.lhs.true6.if.end37_crit_edge:                \l  br label %if.end37\l}"];
	Node0x55c92b7dd8c0 -> Node0x55c92b7e8240;
	Node0x55c92b7e8010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{if.then:                                          \l  %arrayidx12 = getelementptr inbounds i32, i32* %x, i64 %OptInsert_idxprom11\l  store i32 %OptInsert_add, i32* %arrayidx12, align 4\l  %idxprom13 = sext i32 %OptInsert_add to i64\l  %arrayidx14 = getelementptr inbounds i32, i32* %b, i64 %idxprom13\l  store i32 0, i32* %arrayidx14, align 4\l  %idxprom16 = sext i32 %OptInsert_add2 to i64\l  %arrayidx17 = getelementptr inbounds i32, i32* %a, i64 %idxprom16\l  store i32 0, i32* %arrayidx17, align 4\l  %add19 = add nsw i32 %OptInsert_sub32, 7\l  %idxprom20 = sext i32 %add19 to i64\l  %arrayidx21 = getelementptr inbounds i32, i32* %c, i64 %idxprom20\l  store i32 0, i32* %arrayidx21, align 4\l  br i1 %OptInsert_cmp22, label %if.then23, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7e8010:s0 -> Node0x55c92b7e8060;
	Node0x55c92b7e8010:s1 -> Node0x55c92b7e81a0;
	Node0x55c92b7e8060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{if.then23:                                        \l  call void @Try(i32 %OptInsert_add24, i32* %q, i32* %a, i32* %b, i32* %c,\l... i32* %x)\l  %tobool25 = icmp ne i32 %OptInsert_1, 0\l  br i1 %tobool25, label %if.then23.if.end_crit_edge, label %if.then26\l|{<s0>T|<s1>F}}"];
	Node0x55c92b7e8060:s0 -> Node0x55c92b7e80b0;
	Node0x55c92b7e8060:s1 -> Node0x55c92b7e8100;
	Node0x55c92b7e80b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{if.then23.if.end_crit_edge:                       \l  br label %if.end\l}"];
	Node0x55c92b7e80b0 -> Node0x55c92b7e8150;
	Node0x55c92b7e8100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{if.then26:                                        \l  %idxprom27 = sext i32 %OptInsert_add to i64\l  %arrayidx28 = getelementptr inbounds i32, i32* %b, i64 %idxprom27\l  store i32 1, i32* %arrayidx28, align 4\l  %idxprom30 = sext i32 %OptInsert_add2 to i64\l  %arrayidx31 = getelementptr inbounds i32, i32* %a, i64 %idxprom30\l  store i32 1, i32* %arrayidx31, align 4\l  %add33 = add nsw i32 %OptInsert_sub32, 7\l  %idxprom34 = sext i32 %add33 to i64\l  %arrayidx35 = getelementptr inbounds i32, i32* %c, i64 %idxprom34\l  store i32 1, i32* %arrayidx35, align 4\l  br label %if.end\l}"];
	Node0x55c92b7e8100 -> Node0x55c92b7e8150;
	Node0x55c92b7e8150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{if.end:                                           \l  br label %if.end36\l}"];
	Node0x55c92b7e8150 -> Node0x55c92b7e81f0;
	Node0x55c92b7e81a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{if.else:                                          \l  store i32 1, i32* %q, align 4\l  br label %if.end36\l}"];
	Node0x55c92b7e81a0 -> Node0x55c92b7e81f0;
	Node0x55c92b7e81f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{if.end36:                                         \l  br label %if.end37\l}"];
	Node0x55c92b7e81f0 -> Node0x55c92b7e8240;
	Node0x55c92b7e8240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.end37:                                         \l  %NewPhi_OptInsert_add2 = phi i32 [ %OptInsert_add2, %if.end36 ], [\l... %OptInsert_add2, %land.lhs.true6.if.end37_crit_edge ], [ %OptInsert_add2,\l... %land.lhs.true.if.end37_crit_edge ], [ %NewPhi_NewPhi_OptInsert_add2,\l... %while.body.if.end37_crit_edge ]\l  %NewPhi_OptInsert_sub32 = phi i32 [ %OptInsert_sub32, %if.end36 ], [\l... %OptInsert_sub32, %land.lhs.true6.if.end37_crit_edge ], [\l... %NewPhi_NewPhi_OptInsert_sub32, %land.lhs.true.if.end37_crit_edge ], [\l... %NewPhi_NewPhi_OptInsert_sub32, %while.body.if.end37_crit_edge ]\l  br label %while.cond, !llvm.loop !31\l}"];
	Node0x55c92b7e8240 -> Node0x55c92b7dd4b0;
	Node0x55c92b7e8290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{while.end:                                        \l  ret void\l}"];
}
