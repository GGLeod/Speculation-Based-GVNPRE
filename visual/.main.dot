digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x5581eef5d300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{entry:\l  %call = call i32 @getchar()\l  %call1 = call i32 @getchar()\l  br label %for.cond\l}"];
	Node0x5581eef5d300 -> Node0x5581eef5d350;
	Node0x5581eef5d350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond:                                         \l  %a.0 = phi i32 [ %call, %entry ], [ %a.1, %for.inc ]\l  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]\l  %cmp = icmp slt i32 %i.0, 100\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5581eef5d350:s0 -> Node0x5581eef5d3a0;
	Node0x5581eef5d350:s1 -> Node0x5581eef5d530;
	Node0x5581eef5d3a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body:                                         \l  %rem = srem i32 %i.0, 10\l  %cmp2 = icmp ne i32 %rem, 1\l  br i1 %cmp2, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5581eef5d3a0:s0 -> Node0x5581eef5d3f0;
	Node0x5581eef5d3a0:s1 -> Node0x5581eef5d440;
	Node0x5581eef5d3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{if.then:                                          \l  %add = add nsw i32 %a.0, 1\l  br label %if.end\l}"];
	Node0x5581eef5d3f0 -> Node0x5581eef5d490;
	Node0x5581eef5d440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{if.else:                                          \l  %add3 = add nsw i32 %a.0, %call1\l  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8],\l... [3 x i8]* @.str, i64 0, i64 0), i32 %add3)\l  br label %if.end\l}"];
	Node0x5581eef5d440 -> Node0x5581eef5d490;
	Node0x5581eef5d490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.end:                                           \l  %a.1 = phi i32 [ %add, %if.then ], [ %a.0, %if.else ]\l  %add5 = add nsw i32 %a.1, %call1\l  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8],\l... [3 x i8]* @.str, i64 0, i64 0), i32 %add5)\l  br label %for.inc\l}"];
	Node0x5581eef5d490 -> Node0x5581eef5d4e0;
	Node0x5581eef5d4e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc:                                          \l  %inc = add nsw i32 %i.0, 1\l  br label %for.cond, !llvm.loop !2\l}"];
	Node0x5581eef5d4e0 -> Node0x5581eef5d350;
	Node0x5581eef5d530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end:                                          \l  ret i32 0\l}"];
}
