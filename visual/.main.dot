digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x56197d416640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{entry:\l  %call = call i32 @getchar()\l  %call1 = call i32 @getchar()\l  br label %entry.split\l}"];
	Node0x56197d416640 -> Node0x56197d425f80;
	Node0x56197d425f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{entry.split:                                      \l  br label %for.cond\l}"];
	Node0x56197d425f80 -> Node0x56197d425fd0;
	Node0x56197d425fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond:                                         \l  %i.0 = phi i32 [ 0, %entry.split ], [ %inc, %for.inc ]\l  %cmp = icmp slt i32 %i.0, 100\l  br i1 %cmp, label %for.body.split, label %for.end, !prof !32\l|{<s0>T|<s1>F}}"];
	Node0x56197d425fd0:s0 -> Node0x56197d426020;
	Node0x56197d425fd0:s1 -> Node0x56197d426430;
	Node0x56197d426020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.split:                                   \l  br label %for.body\l}"];
	Node0x56197d426020 -> Node0x56197d426070;
	Node0x56197d426070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body:                                         \l  %rem = srem i32 %i.0, 10\l  %cmp2 = icmp eq i32 %rem, 1\l  br i1 %cmp2, label %if.then.split, label %if.else.split, !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x56197d426070:s0 -> Node0x56197d4260c0;
	Node0x56197d426070:s1 -> Node0x56197d426160;
	Node0x56197d4260c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{if.then.split:                                    \l  br label %if.then\l}"];
	Node0x56197d4260c0 -> Node0x56197d426110;
	Node0x56197d426110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{if.then:                                          \l  br label %if.end\l}"];
	Node0x56197d426110 -> Node0x56197d426200;
	Node0x56197d426160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{if.else.split:                                    \l  %OptInsert_add3 = add nsw i32 %call, %call1\l  br label %if.else\l}"];
	Node0x56197d426160 -> Node0x56197d4261b0;
	Node0x56197d4261b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{if.else:                                          \l  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8],\l... [3 x i8]* @.str, i64 0, i64 0), i32 %OptInsert_add3)\l  br label %if.end\l}"];
	Node0x56197d4261b0 -> Node0x56197d426200;
	Node0x56197d426200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  %rem5 = srem i32 %i.0, 10\l  %cmp6 = icmp eq i32 %rem5, 1\l  br i1 %cmp6, label %if.then7.split, label %if.else10.split, !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x56197d426200:s0 -> Node0x56197d426250;
	Node0x56197d426200:s1 -> Node0x56197d4262f0;
	Node0x56197d426250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{if.then7.split:                                   \l  br label %if.then7\l}"];
	Node0x56197d426250 -> Node0x56197d4262a0;
	Node0x56197d4262a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{if.then7:                                         \l  br label %if.end13\l}"];
	Node0x56197d4262a0 -> Node0x56197d426390;
	Node0x56197d4262f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{if.else10.split:                                  \l  %OptInsert_add31 = add nsw i32 %call, %call1\l  br label %if.else10\l}"];
	Node0x56197d4262f0 -> Node0x56197d426340;
	Node0x56197d426340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{if.else10:                                        \l  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8],\l... [3 x i8]* @.str, i64 0, i64 0), i32 %OptInsert_add31)\l  br label %if.end13\l}"];
	Node0x56197d426340 -> Node0x56197d426390;
	Node0x56197d426390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end13:                                         \l  br label %for.inc\l}"];
	Node0x56197d426390 -> Node0x56197d4263e0;
	Node0x56197d4263e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc:                                          \l  %inc = add nsw i32 %i.0, 1\l  br label %for.cond, !llvm.loop !34\l}"];
	Node0x56197d4263e0 -> Node0x56197d425fd0;
	Node0x56197d426430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{for.end:                                          \l  ret i32 0\l}"];
}
