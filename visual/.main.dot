digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55d349a20640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{entry:\l  %call = call i32 @getchar()\l  %call1 = call i32 @getchar()\l  %nullalloc13 = alloca i32, align 4\l  %nullLoad13 = load i32, i32* %nullalloc13, align 4\l  br label %entry.split\l}"];
	Node0x55d349a20640 -> Node0x55d349a2f8d0;
	Node0x55d349a2f8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{entry.split:                                      \l  %OptInsert_add = add nsw i32 %call, 1\l  br label %for.cond\l}"];
	Node0x55d349a2f8d0 -> Node0x55d349a2f920;
	Node0x55d349a2f920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond:                                         \l  %i.0 = phi i32 [ 0, %entry.split ], [ %inc, %for.inc ]\l  %NewPhi_NewPhi_OptInsert_add5 = phi i32 [ %nullLoad13, %entry.split ], [\l... %NewPhi_OptInsert_add5, %for.inc ]\l  %cmp = icmp slt i32 %i.0, 100\l  br i1 %cmp, label %for.body.split, label %for.end, !prof !32\l|{<s0>T|<s1>F}}"];
	Node0x55d349a2f920:s0 -> Node0x55d349a2f970;
	Node0x55d349a2f920:s1 -> Node0x55d349a2fba0;
	Node0x55d349a2f970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.split:                                   \l  %OptInsert_rem = srem i32 %i.0, 10\l  br label %for.body\l}"];
	Node0x55d349a2f970 -> Node0x55d349a2f9c0;
	Node0x55d349a2f9c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body:                                         \l  %cmp2 = icmp ne i32 %OptInsert_rem, 1\l  br i1 %cmp2, label %if.then, label %if.else.split, !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x55d349a2f9c0:s0 -> Node0x55d349a2fa10;
	Node0x55d349a2f9c0:s1 -> Node0x55d349a2fa60;
	Node0x55d349a2fa10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{if.then:                                          \l  %call3 = call i32 @getchar()\l  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8],\l... [3 x i8]* @.str, i64 0, i64 0), i32 %call3)\l  br label %if.end\l}"];
	Node0x55d349a2fa10 -> Node0x55d349a2fb00;
	Node0x55d349a2fa60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{if.else.split:                                    \l  %OptInsert_add5 = add nsw i32 %OptInsert_add, %call1\l  br label %if.else\l}"];
	Node0x55d349a2fa60 -> Node0x55d349a2fab0;
	Node0x55d349a2fab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{if.else:                                          \l  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8],\l... [3 x i8]* @.str, i64 0, i64 0), i32 %OptInsert_add5)\l  br label %if.end\l}"];
	Node0x55d349a2fab0 -> Node0x55d349a2fb00;
	Node0x55d349a2fb00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  %NewPhi_OptInsert_add5 = phi i32 [ %NewPhi_NewPhi_OptInsert_add5, %if.then\l... ], [ %OptInsert_add5, %if.else ]\l  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8],\l... [3 x i8]* @.str, i64 0, i64 0), i32 %NewPhi_OptInsert_add5)\l  br label %for.inc\l}"];
	Node0x55d349a2fb00 -> Node0x55d349a2fb50;
	Node0x55d349a2fb50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc:                                          \l  %inc = add nsw i32 %i.0, 1\l  br label %for.cond, !llvm.loop !34\l}"];
	Node0x55d349a2fb50 -> Node0x55d349a2f920;
	Node0x55d349a2fba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{for.end:                                          \l  ret i32 0\l}"];
}
